# 현재 사람이 체육복이 없는데 그 사람의 앞 뒤 사람 모두 여벌의 체육복을 가지고 있을 경우 앞의 사람 것을 먼저 빌린다는 조건 추가해야 한다.

def solution(n, lost, reserve):
    u = [1]*n     # 유니폼의 개수를 나타내는 리스트, 리스트 길이는 사람 수만큼, 처음에는 모두 1로 초기화
    for i in lost:     # 유니폼을 잃어버린 사람의 번호는 i 
        u[i-1] -= 1     # u 리스트에서 i-1 요소에 1을 뺌 (i-1 요소가 잃어버린 사람의 번호와 대응한다고 하자.)
    for j in reserve:     # 여벌을 가지고 있는 사람의 번호는 j
        u[j-1] += 1     # u 리스트에서 j-1 요소에 1을 더함. (여기까지 오면 여벌을 가지고 있었는데 잃어버린 사람까지 처리 가능 (1로 처리), 여벌 경우 2, 잃어버려서 없는 경우 0으로 리스트 요소가 됨.)
    for x in range(len(u)):     # x는 u 리스트 탐색을 위한 요소
        if u[x] == 0:     # 체육복이 아예 없는 사람일 경우
            if x == 0:     # 그 사람의 index가 0이면 (번호가 1이면)
                if u[x+1] == 2:     # 바로 뒤에 사람이 여벌이 있으면 그 사람한테만 빌리기 가능
                    u[x+1] -= 1
                    u[x] += 1
            elif x == len(u) - 1:     # 그 사람의 indes가 len(u)-1이면 (번호가 마지막 번호이면)
                if u[x-1] == 2:     # 바로 앞의 사람이 여벌이 있으면 그 사람한테만 빌리기 가능
                    u[x-1] -= 1
                    u[x] += 1
            else:     # 그 사람의 인덱스가 처음 또는 마지막 인덱스가 아닌 경우 (사이의 경우)
                if (u[x-1] == 2 and u[x+1] == 2) or (u[x-1] == 2):     # 첫줄 주석 참고! 
                    u[x-1] -= 1
                    u[x] += 1
                elif u[x+1] == 2:     # 바로 뒷사람만 여벌을 가지고 있을 경우  
                    u[x+1] -= 1
                    u[x] += 1
    return len(u) - u.count(0)     # 최종적으로 u 리스트 요소 개수에서 0인 요소 개수를 빼면 체육복을 가지고 있는 사람의 수가 나옴. 이들만이 수업에 참가할 수 있으므로 그 수 반환