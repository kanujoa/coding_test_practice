# 재귀함수는 반복문의 효과를 낸다. 자신이 자기 자신을 반복하여 호출하기 때문이다.
# 2중 for문, 3중 for문 등 이런 식으로 풀기에는 유연성이 떨어지는 코드들이 있다. 이러한 경우 반복문의 대체재로 재귀함수를
# 사용해 주면 쉽게 해결이 가능하다.
# 참고 : https://bentist.tistory.com/57

# def DFS(x):     # 여기서 x 변수는 DFS 함수의 지역변수
#     if x > 0:     # x > 0일때만 출력, 즉 x <= 0이 되면 종료
#         print(x)
#         DFS(x-1)     # 자기 자신을 호출해 x-1 값을 전달함
# 위와 같은 순서로 함수를 작성하고 3을 입력하면 3, 2, 1 순서로 출력됨. 출력 먼저 하고 DFS에 대입하므로
# 문제에서 요구한 바와 같이 1, 2, 3 순서로 출력되게 하고 싶다면 아래와 같이 순서를 바꾸어 주면 됨.
# 아래와 같이 작성 시 DFS 함수를 먼저 실행하고 print를 실행하지 않았으므로 스택에 남게 되고 후입선출에 따라 출력되므로 1, 2, 3 순서로 출력 가능

def DFS1(x):
    if x > 0:
        print(x, end=' ')
        DFS1(x - 1)

def DFS2(x):
    if x > 0:
        DFS2(x - 1)
        print(x, end=' ')

def main():
    n = int(input())
    DFS1(n)     # DFS는 깊이 우선 탐색이라는 의미
    # 결과: 3 2 1
    DFS2(n)     
    # 결과: 1 2 3

main()