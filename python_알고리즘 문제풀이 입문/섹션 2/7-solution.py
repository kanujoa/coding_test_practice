# 에라토스테니스 체 방법으로 구하면 가장 빠르게 소수의 개수를 구할 수 있다. 리스트의 길이는 N이고 초깃값은 모두 0이다.
# 1은 소수가 아니므로 1은 제외하고 2부터 for문이 돈다. for문은 ch[i]가 참일 때 돌고 해당 요소에 1을 더한다.
# 그 속에 또 for문이 도는데 그것은 해당 숫자의 배수가 되는 수에 1을 더한다. 1로 바뀐 요소들은 앞 조건에 의해 후에 for문이 돌지 않는다.

n = int(input())     # 정수 입력 받기
ch = [0] * (n+1)      # 0이 n+1개로 이루어져 있는 리스트 ch 만들기(인덱스와 숫자를 같게 하기 위해 n+1개로 만듦.)
cnt = 0     # 소수의 개수 카운팅
for i in range(2, n+1):     # 1은 소수가 아니므로 인덱스의 범위는 2부터 n+1까지
  if ch[i] == 0:     # ch[i]가 0이라면 그 숫자는 소수라는 뜻 (맨 처음은 2부터 시작한다. 2는 무조건 소수일 수밖에 없음.) 0이 아니면 이미 어떤 숫자의 배수라는 뜻이기 때문에 건너뜀.
    cnt += 1
    for j in range(i, n+1, i):     # ch[i]의 배수를 찾기 위하여 인덱스의 범위가 i부터 시작하여 n+1까지인데 간격이 i인 인덱스인 j를 구한다.
      ch[j] = 1     # 그 요소는 1이다.
print(cnt)      # 약수의 개수 출력